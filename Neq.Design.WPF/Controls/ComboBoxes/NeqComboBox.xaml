<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Neq.Design.WPF.Converters"
                    xmlns:neq="clr-namespace:Neq.Design.WPF.Controls">

    <Style x:Key="NeqComboBox" TargetType="{x:Type neq:NeqComboBox}">
        
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>

        <Setter Property="Foreground" Value="{DynamicResource ForegroundPrimary}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundHover}"/>
        <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelection}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="8"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type neq:NeqComboBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            x:Name="grid">
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>


                            <ToggleButton x:Name="toggleButton" 
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          Background="Transparent"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Grid.ColumnSpan="2">

                                <ToggleButton.Style>

                                    <Style TargetType="{x:Type ToggleButton}">

                                        <Setter Property="OverridesDefaultStyle" Value="True"/>

                                        <Setter Property="Template">

                                            <Setter.Value>

                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="Transparent"/>
                                                </ControlTemplate>
                                                
                                            </Setter.Value>
                                            
                                        </Setter>

                                    </Style>
                                    
                                </ToggleButton.Style>
                                
                            </ToggleButton>

                            <ContentPresenter x:Name="contentSite"
                                              IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                            <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}" 
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                 Margin="{TemplateBinding Padding}"
                                 CaretBrush="{TemplateBinding Foreground}"
                                 SelectionBrush="{TemplateBinding SelectionBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Focusable="True"
                                 SelectionOpacity="1"
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 ContextMenu="{DynamicResource NeqTextBoxContextMenu}">

                                <TextBox.Template>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <Popup Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=grid}"
                                   AllowsTransparency="True"
                                   Grid.ColumnSpan="2"
                                   Focusable="False"
                                   PopupAnimation="Fade"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   MinWidth="{TemplateBinding ActualWidth}"
                                   MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border x:Name="dropDownBorder"
                                        CornerRadius="{DynamicResource CornerRadius}"
                                        Background="{DynamicResource ControlBackground}">

                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>

                                </Border>

                            </Popup>

                            <Path Grid.Column="1"     
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 5 5 L 10 0 Z"/>

                        </Grid>

                        
                        
                    </Border>
                   
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="dropDownBorder" Property="MinHeight" Value="0"/>
                        </Trigger>
                        
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                     
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="contentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundHover}"/>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundDisabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundDisabled}"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundPrimary}"/>
            <Setter Property="Padding" Value="10 7 10 7"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{DynamicResource CornerRadius}"
                                Padding="{TemplateBinding Padding}">

                            <ContentPresenter/>

                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundHover}"/>
            </Trigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>