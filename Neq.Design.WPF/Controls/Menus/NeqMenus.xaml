<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:neq="clr-namespace:Neq.Design.WPF.Controls"
                    xmlns:converters="clr-namespace:Neq.Design.WPF.Converters">
    
    <DrawingImage x:Key="NeqMenuRightIcon">
        <DrawingImage.Drawing>
            <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type neq:NeqMenuItem}}, Path=Foreground}" Geometry="F1 M24,24z M0,0z M10,17L15,12 10,7 10,17z" />
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <neq:NeqContextMenu x:Key="NeqTextBoxContextMenu" Style="{DynamicResource NeqContextMenu}">
        
        <neq:NeqMenuItem Command="Cut" Style="{DynamicResource NeqMenuItem}">
            <neq:NeqMenuItem.IconSource>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                            <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type neq:NeqMenuItem}}, Path=Foreground}" Geometry="F1 M24,24z M0,0z M19,3L13,9 15,11 22,4 22,3 M12,12.5A0.5,0.5,0,0,1,11.5,12A0.5,0.5,0,0,1,12,11.5A0.5,0.5,0,0,1,12.5,12A0.5,0.5,0,0,1,12,12.5 M6,20A2,2,0,0,1,4,18C4,16.89,4.9,16,6,16A2,2,0,0,1,8,18C8,19.11,7.1,20,6,20 M6,8A2,2,0,0,1,4,6C4,4.89,4.9,4,6,4A2,2,0,0,1,8,6C8,7.11,7.1,8,6,8 M9.64,7.64C9.87,7.14,10,6.59,10,6A4,4,0,0,0,6,2A4,4,0,0,0,2,6A4,4,0,0,0,6,10C6.59,10,7.14,9.87,7.64,9.64L10,12 7.64,14.36C7.14,14.13,6.59,14,6,14A4,4,0,0,0,2,18A4,4,0,0,0,6,22A4,4,0,0,0,10,18C10,17.41,9.87,16.86,9.64,16.36L12,14 19,21 22,21 22,20 9.64,7.64z" />
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </neq:NeqMenuItem.IconSource>
        </neq:NeqMenuItem>

        <neq:NeqMenuItem Command="Copy" Style="{DynamicResource NeqMenuItem}">
            <neq:NeqMenuItem.IconSource>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup ClipGeometry="M0,0 V20 H20 V0 H0 Z">
                            <DrawingGroup Opacity="1">
                                <DrawingGroup.ClipGeometry>
                                    <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0,0,20,20" />
                                </DrawingGroup.ClipGeometry>
                                <GeometryDrawing Geometry="F1 M20,20z M0,0z M4.16699,12.5L3.33366,12.5C2.89163,12.5 2.46771,12.3244 2.15515,12.0118 1.84259,11.6992 1.66699,11.2753 1.66699,10.8333L1.66699,3.33329C1.66699,2.89127 1.84259,2.46734 2.15515,2.15478 2.46771,1.84222 2.89163,1.66663 3.33366,1.66663L10.8337,1.66663C11.2757,1.66663 11.6996,1.84222 12.0122,2.15478 12.3247,2.46734 12.5003,2.89127 12.5003,3.33329L12.5003,4.16663 M9.16699,7.49996L16.667,7.49996C17.5875,7.49996,18.3337,8.24615,18.3337,9.16663L18.3337,16.6666C18.3337,17.5871,17.5875,18.3333,16.667,18.3333L9.16699,18.3333C8.24652,18.3333,7.50033,17.5871,7.50033,16.6666L7.50033,9.16663C7.50033,8.24615,8.24652,7.49996,9.16699,7.49996z">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type neq:NeqMenuItem}}, Path=Foreground}" Thickness="1.66667" StartLineCap="Round" EndLineCap="Round" LineJoin="Miter" MiterLimit="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingGroup>
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </neq:NeqMenuItem.IconSource>
        </neq:NeqMenuItem>

        <neq:NeqMenuItem Command="Paste" Style="{DynamicResource NeqMenuItem}">
            <neq:NeqMenuItem.IconSource>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                            <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type neq:NeqMenuItem}}, Path=Foreground}" Geometry="F1 M24,24z M0,0z M19,20L5,20 5,4 7,4 7,7 17,7 17,4 19,4 M12,2A1,1,0,0,1,13,3A1,1,0,0,1,12,4A1,1,0,0,1,11,3A1,1,0,0,1,12,2 M19,2L14.82,2C14.4,0.84 13.3,0 12,0 10.7,0 9.6,0.84 9.18,2L5,2A2,2,0,0,0,3,4L3,20A2,2,0,0,0,5,22L19,22A2,2,0,0,0,21,20L21,4A2,2,0,0,0,19,2z" />
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </neq:NeqMenuItem.IconSource>
        </neq:NeqMenuItem>

    </neq:NeqContextMenu>

    <converters:SourceToImageConverter x:Key="sourceToImageConverter"/>

    <ControlTemplate x:Key="NeqTopLevelHeaderTemplate" TargetType="{x:Type neq:NeqMenuItem}">

        <Border BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding CornerRadius}"
                Padding="{TemplateBinding Padding}"
                x:Name="border">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="icon"
                                  Grid.Column="0"
                                  Content="{TemplateBinding Converter={StaticResource sourceToImageConverter}, Property=IconSource}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Width="20"
                                  Height="20"
                                  Margin="{TemplateBinding IconMargin}"/>

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="1"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"/>

                <Popup x:Name="PART_Popup" 
                       AllowsTransparency="True" 
                       Focusable="False" 
                       IsOpen="{TemplateBinding IsSubmenuOpen}" 
                       Placement="Bottom"
                       PopupAnimation="Fade" 
                       PlacementTarget="{Binding ElementName=border}">

                    <Border Background="{TemplateBinding PopupBackgroundBrush}"
                            Padding="{TemplateBinding PopupPadding}"
                            BorderBrush="{TemplateBinding PopupBorderBrush}"
                            BorderThickness="{TemplateBinding PopupBorderThikness}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                      VerticalScrollBarVisibility="Auto">

                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Grid.IsSharedSizeScope="True"/>

                        </ScrollViewer>

                    </Border>
                </Popup>

            </Grid>
        </Border>

        <ControlTemplate.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="False"/>
                    <Condition Property="IconSource" Value="{x:Null}"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
            </MultiTrigger>


        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="NeqSubmenuHeaderTemplate" TargetType="{x:Type neq:NeqMenuItem}">

        <Border BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding CornerRadius}"
                Padding="{TemplateBinding Padding}"
                x:Name="border">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="InputGestureText"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="ExpandIcon"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="icon"
                                  Grid.Column="0"
                                  Content="{TemplateBinding Converter={StaticResource sourceToImageConverter}, Property=IconSource}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Width="20"
                                  Height="20"
                                  Margin="{TemplateBinding IconMargin}"/>

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="1"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"/>

                <ContentPresenter Grid.Column="3"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Right"
                                  Width="20"
                                  Margin="6 0 0 0"
                                  Height="20"
                                  Content="{Binding Source={StaticResource NeqMenuRightIcon}, Converter={StaticResource sourceToImageConverter}}"/>

                <Popup x:Name="PART_Popup" 
                       AllowsTransparency="True" 
                       Focusable="False" 
                       IsOpen="{TemplateBinding IsSubmenuOpen}" 
                       Placement="Right"
                       PopupAnimation="Fade" 
                       PlacementTarget="{Binding ElementName=border}">

                    <Border Background="{TemplateBinding PopupBackgroundBrush}"
                            Padding="{TemplateBinding PopupPadding}"
                            BorderBrush="{TemplateBinding PopupBorderBrush}"
                            BorderThickness="{TemplateBinding PopupBorderThikness}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                      VerticalScrollBarVisibility="Auto">

                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Grid.IsSharedSizeScope="True"/>

                        </ScrollViewer>

                    </Border>
                </Popup>

            </Grid>
        </Border>

        <ControlTemplate.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="False"/>
                    <Condition Property="IconSource" Value="{x:Null}"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
            </MultiTrigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="NeqItemTemplate" TargetType="{x:Type neq:NeqMenuItem}">

        <Border BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding CornerRadius}"
                Padding="{TemplateBinding Padding}">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="InputGestureText"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="ExpandIcon"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="icon"
                                  Grid.Column="0"
                                  Content="{TemplateBinding Converter={StaticResource sourceToImageConverter}, Property=IconSource}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Width="20"
                                  Height="20"
                                  Margin="{TemplateBinding IconMargin}"/>

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="1"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"/>

                <TextBlock x:Name="inputGestureText"
                           Text="{TemplateBinding InputGestureText}"
                           Foreground="{TemplateBinding InputGestureTextBrush}"
                           Margin="10 0 0 0"
                           Grid.Column="2"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="False"/>
                    <Condition Property="IconSource" Value="{x:Null}"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
            </MultiTrigger>

            <Trigger Property="InputGestureText" Value="{x:Null}">
                <Setter TargetName="inputGestureText" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="InputGestureText" Value="">
                <Setter TargetName="inputGestureText" Property="Visibility" Value="Collapsed"/>
            </Trigger>

        </ControlTemplate.Triggers>
        
    </ControlTemplate>
    
    <Style x:Key="NeqMenuItem" TargetType="{x:Type neq:NeqMenuItem}">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource NeqFocusVisual}"/>
            
            <Setter Property="Background" Value="{DynamicResource BackgroundPrimary}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundPrimary}"/>
            <Setter Property="InputGestureTextBrush" Value="{DynamicResource ForegroundSecondary}"/>
            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>
            
            <Setter Property="PopupBackgroundBrush" Value="{DynamicResource BackgroundPrimary}"/>
            <Setter Property="PopupBorderBrush" Value="{DynamicResource BackgroundStroke}"/>
            <Setter Property="PopupPadding" Value="6"/>
            <Setter Property="PopupBorderThikness" Value="2"/>

            <Setter Property="Padding" Value="10 7"/>
            <Setter Property="IconMargin" Value="0 0 10 0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template" Value="{StaticResource NeqTopLevelHeaderTemplate}"/>
        </Style.Setters>

        <Style.Triggers>

            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource NeqTopLevelHeaderTemplate}"/>
            </Trigger>

            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource NeqSubmenuHeaderTemplate}"/>
            </Trigger>

            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource NeqItemTemplate}"/>
            </Trigger>

            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource NeqItemTemplate}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="InputGestureTextBrush" Value="{DynamicResource ForegroundDisabled}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundHover}"/>
            </Trigger>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable" Value="True"/>
                </MultiTrigger.Conditions>
                
                <Setter Property="IconSource">
                    <Setter.Value>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <DrawingGroup ClipGeometry="M0,0 V20 H20 V0 H0 Z">
                                    <GeometryDrawing Geometry="F1 M20,20z M0,0z M16.6666,5L7.49998,14.1667 3.33331,10">
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="{DynamicResource Accent}" Thickness="1.66667" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                                        </GeometryDrawing.Pen>
                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Setter.Value>
                </Setter>
                
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="NeqMenu" TargetType="{x:Type neq:NeqMenu}">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource BackgroundPrimary}"/>
            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>
            <Setter Property="Orientaion" Value="Horizontal"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type neq:NeqMenu}">

                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">

                                <StackPanel IsItemsHost="True"
                                            Orientation="{TemplateBinding Orientaion}"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True"/>

                            </ScrollViewer>


                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>
    </Style>
    
    <Style x:Key="NeqContextMenu" TargetType="{x:Type neq:NeqContextMenu}">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource BackgroundPrimary}"/>
            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundStroke}"/>
            <Setter Property="ContextMenuService.Placement" Value="Mouse"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Padding" Value="6"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type neq:NeqContextMenu}">

                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                                
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True"/>
                                
                            </ScrollViewer>
                          

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>
    </Style>

</ResourceDictionary>