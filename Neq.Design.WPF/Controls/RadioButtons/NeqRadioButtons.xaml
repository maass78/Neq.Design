<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Neq.Design.WPF.Controls" 
                    xmlns:converters="clr-namespace:Neq.Design.WPF.Converters">

    <converters:SourceToImageConverter x:Key="sourceToImageConverter"/>
    
    <Style x:Key="NeqBaseRadioButton" TargetType="{x:Type controls:NeqRadioButton}">

        <Style.Setters>
           
            <Setter Property="IconMargin" Value="0"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>

            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10 8"/>

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type controls:NeqRadioButton}">

                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                x:Name="border">

                            <StackPanel Orientation="Horizontal">

                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="imageContainer" 
                                     Content="{TemplateBinding Converter={StaticResource sourceToImageConverter}, Property=Icon}"
                                     Margin="{TemplateBinding IconMargin}"/>


                                <ContentPresenter VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}"/>

                            </StackPanel>

                        </Border>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style.Setters>
        
    </Style>

    <Style x:Key="NeqRadioButton" TargetType="{x:Type controls:NeqRadioButton}" BasedOn="{StaticResource NeqBaseRadioButton}">

        <Style.Setters>

            <Setter Property="Foreground" Value="{DynamicResource ForegroundPrimary}"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundHover}"/>
            
            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>

        </Style.Setters>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundHover}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundDisabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundDisabled}"/>
            </Trigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="NeqDestructiveRadioButton" TargetType="{x:Type controls:NeqRadioButton}" BasedOn="{StaticResource NeqBaseRadioButton}">

        <Style.Setters>

            <Setter Property="Foreground" Value="{DynamicResource DestructiveForeground}"/>
            <Setter Property="Background" Value="{DynamicResource DestructiveBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DestructiveHover}"/>

            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>

        </Style.Setters>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DestructiveHover}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource DestructiveForeground}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DestructiveForegroundDisabled}"/>
                <Setter Property="Background" Value="{DynamicResource DestructiveBackgroundDisabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DestructiveBackgroundDisabled}"/>
            </Trigger>

        </Style.Triggers>

    </Style>


    <Style x:Key="NeqNavRadioButton" TargetType="{x:Type controls:NeqRadioButton}" BasedOn="{StaticResource NeqBaseRadioButton}">

        <Style.Setters>

            <Setter Property="Foreground" Value="{DynamicResource ForegroundPrimary}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundPrimary}"/>

            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12 10"/>
            <Setter Property="IconMargin" Value="0 0 10 0"/>
            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>

        </Style.Setters>

        <Style.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True" />

                </MultiTrigger.Conditions>

                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource BackgroundStroke}"/>
                </MultiTrigger.Setters>

            </MultiTrigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Accent}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundPrimary}"/>
            </Trigger>

        </Style.Triggers>

    </Style>
    
</ResourceDictionary>