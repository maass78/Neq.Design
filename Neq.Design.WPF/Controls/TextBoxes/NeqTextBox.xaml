<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:converters="clr-namespace:Neq.Design.WPF.Converters"
                    xmlns:neq="clr-namespace:Neq.Design.WPF.Controls">

    <converters:BoolToVisibiltyConverter x:Key="boolToVisibiltyConverter"/>
    <converters:TextAligmentToHorizontalAligmentConverter x:Key="textAligmentToHorizontalAligmentConverter"/>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>

    <Style x:Key="NeqTextBox" TargetType="{x:Type neq:NeqTextBox}">

        <Style.Setters>
            
            <Setter Property="FocusVisualStyle" Value="{DynamicResource NeqFocusVisual}"/>
            
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundHover}"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundPrimary}"/>
            <Setter Property="HintBrush" Value="{DynamicResource ForegroundSecondary}"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelection}"/>
            <Setter Property="SelectionOpacity" Value="1"/>
            <Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type neq:NeqTextBox}">

                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                x:Name="border"
                                Padding="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" 
                                CornerRadius="{TemplateBinding CornerRadius}">

                            <Grid VerticalAlignment="Stretch" 
                                      HorizontalAlignment="Stretch">

                                <ScrollViewer x:Name="PART_ContentHost"
                                           Focusable="False"
                                           HorizontalScrollBarVisibility="Hidden"
                                           VerticalScrollBarVisibility="Hidden"/>

                                <TextBlock IsHitTestVisible="False"
                                           Text="{TemplateBinding HintText}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="{Binding Path=TextAlignment, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource textAligmentToHorizontalAligmentConverter}}"
                                           TextTrimming="CharacterEllipsis"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding HintBrush}">

                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </Style>
                                    </TextBlock.Style>

                                </TextBlock>

                            </Grid>

                        </Border>

                    </ControlTemplate>



                </Setter.Value>
            </Setter>

            <Setter Property="ContextMenu" Value="{DynamicResource NeqTextBoxContextMenu}"/>

        </Style.Setters>

        <Style.Triggers>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True"/>
                    <Condition Property="IsDestructive" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="BorderBrush" Value="{DynamicResource DestructiveForeground}"/>

            </MultiTrigger>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True"/>
                    <Condition Property="IsDestructive" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>

            </MultiTrigger>


            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False"/>
                    <Condition Property="IsDestructive" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter Property="HintBrush" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundDisabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundDisabled}"/>

            </MultiTrigger>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False"/>
                    <Condition Property="IsDestructive" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="HintBrush" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundDisabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DestructiveForegroundDisabled}"/>

            </MultiTrigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>