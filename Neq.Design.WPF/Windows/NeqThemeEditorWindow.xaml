<Window x:Class="Neq.Design.WPF.Windows.NeqThemeEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Neq.Design.WPF.Windows"
        xmlns:neq="clr-namespace:Neq.Design.WPF.Controls" 
        xmlns:extended="clr-namespace:Neq.Design.WPF.Controls.Extended" 
        xmlns:converters="clr-namespace:Neq.Design.WPF.Converters" 
        xmlns:viewmodels="clr-namespace:Neq.Design.WPF.Windows.ViewModels" 
        xmlns:helpers="clr-namespace:Neq.Design.WPF.Helpers" 
        xmlns:themes="clr-namespace:Neq.Design.WPF.Themes" 
        d:DataContext="{d:DesignInstance Type=viewmodels:ThemeEditorViewModel}"
        mc:Ignorable="d"
        Title="Neq Theme Editor" 
        Height="450"
        Width="800"
        WindowStyle="SingleBorderWindow"
        FontSize="16"
        Background="{DynamicResource BackgroundPrimary}">

    <Window.Resources>

        <converters:BoolInverterConverter x:Key="boolInverterConverter"/>

        <DrawingImage x:Key="AddIcon">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type neq:NeqToggleButton}}, Path=Foreground}" Geometry="F1 M24,24z M0,0z M19,13L13,13 13,19 11,19 11,13 5,13 5,11 11,11 11,5 13,5 13,11 19,11 19,13z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>


    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="10"
                      CornerRadius="0" 
                      CaptionHeight="24"
                      UseAeroCaptionButtons="False"
                      ResizeBorderThickness="7"/>
    </WindowChrome.WindowChrome>

    <Grid x:Name="gridMain" 
          Background="{DynamicResource BackgroundPrimary}" 
          SnapsToDevicePixels="False">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="24"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{DynamicResource ControlBackground}">

            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Right"
                        WindowChrome.IsHitTestVisibleInChrome="True">

                <neq:NeqButton Style="{StaticResource NeqChromeButton}"
                               x:Name="buttonMinimize"
                               Width="32"
                               Padding="4"
                               Icon="{StaticResource ChromeMinimizeIcon}"
                               IconMargin="0"
                               VerticalContentAlignment="Center"
                               HorizontalContentAlignment="Center"/>

                <neq:NeqButton Style="{StaticResource NeqChromeButton}"
                               x:Name="buttonMaximize"
                               Width="32"
                               Padding="4"
                               Icon="{StaticResource ChromeMaximizeIcon}"
                               IconMargin="0"
                               VerticalContentAlignment="Center"
                               HorizontalContentAlignment="Center"/>

                <neq:NeqButton Style="{StaticResource NeqChromeCloseButton}"
                               x:Name="buttonClose"
                               Width="32"
                               Padding="3"
                               Icon="{StaticResource ChromeCloseIcon}"
                               IconMargin="0"
                               VerticalContentAlignment="Center"
                               HorizontalContentAlignment="Center"/>

            </StackPanel>

        </Border>

        <Grid Grid.Row="1">

            <Grid.ColumnDefinitions>

                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*"/>

            </Grid.ColumnDefinitions>


            <GridSplitter Grid.Column="1" 
                          Width="2" 
                          Background="{DynamicResource BackgroundPrimary}"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Center"/>


            <Grid Grid.Column="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>

                <neq:NeqToggleButton Style="{StaticResource NeqToggleButton}"
                                     x:Name="buttonAdd"
                                     Width="32"
                                     Height="32"
                                     Margin="10 0"
                                     HorizontalAlignment="Left"
                                     Padding="2"
                                     IsChecked="{Binding IsAddPopupVisible, Mode=TwoWay}"
                                     Icon="{StaticResource AddIcon}"
                                     VerticalAlignment="Center"
                                     IsHitTestVisible="{Binding ElementName=popupAdd, Path=IsOpen, Mode=OneWay, Converter={StaticResource boolInverterConverter}}"/>

                <Popup x:Name="popupAdd"
                       IsOpen="{Binding ElementName=buttonAdd, Path=IsChecked}"
                       StaysOpen="False"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       PopupAnimation="Fade"
                       PlacementTarget="{Binding ElementName=buttonAdd}">

                    <Border CornerRadius="{DynamicResource CornerRadius}"
                            Background="{DynamicResource BackgroundPrimary}"
                            BorderBrush="{DynamicResource BackgroundStroke}"
                            BorderThickness="2"
                            Padding="10">

                        <StackPanel Orientation="Vertical"
                                    Focusable="False"
                                    Margin="0 0 0 0">

                            <TextBlock Text="Based on"
                                       Foreground="{DynamicResource ForegroundPrimary}"
                                       HorizontalAlignment="Center"/>

                            <neq:NeqComboBox Width="160"
                                             Style="{StaticResource NeqComboBox}"
                                             ItemsSource="{Binding AllThemes}"
                                             SelectedItem="{Binding AddSelectedTheme, Mode=TwoWay}"
                                             DisplayMemberPath="ThemeName"
                                             Margin="0 6 0 0"
                                             MaxDropDownHeight="200"/>

                            <neq:NeqButton Style="{StaticResource NeqAccentButton}"
                                           Content="Create"
                                           Command="{Binding AddThemeCommand}"
                                           HorizontalContentAlignment="Center"
                                           Margin="0 10 0 0"/>

                        </StackPanel>

                    </Border>



                </Popup>

                <neq:NeqTextBox x:Name="textBoxSearch"
                                Text="{Binding ThemesSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource NeqTextBox}"
                                HintText="Search"
                                HorizontalAlignment="Stretch"
                                Margin="52 10 10 10"
                                VerticalAlignment="Top"/>

                <ListBox x:Name="listThemes"
                         Grid.Row="1"
                         Background="{DynamicResource BackgroundSecondary}"
                         SelectedItem="{Binding SelectedTheme, Mode=TwoWay}"
                         BorderThickness="0"
                         ItemsSource="{Binding ThemesCollectionView}">

                    <ListBox.Resources>
                        <helpers:BindingProxy x:Key="BindingProxy" 
                                               Data="{Binding}" />
                    </ListBox.Resources>



                    <ListBox.ItemContainerStyle>

                        <Style TargetType="{x:Type ListBoxItem}">

                            <Style.Resources>
                            </Style.Resources>

                            <Style.Setters>

                                <Setter Property="ContextMenu">

                                    <Setter.Value>

                                        <neq:NeqContextMenu Style="{DynamicResource NeqContextMenu}">

                                            <neq:NeqMenuItem Style="{DynamicResource NeqMenuItem}"
                                                             Header="Set this theme"
                                                             Command="{Binding Data.SetThemeCommand, Source={StaticResource BindingProxy}}"
                                                             IsCheckable="True"
                                                             IsChecked="{Binding Data.IsSelectedThemeActive, Source={StaticResource BindingProxy}}"/>

                                            <neq:NeqMenuItem Style="{DynamicResource NeqMenuItem}"
                                                             Header="Remove"
                                                             Command="{Binding Data.RemoveThemeCommand, Source={StaticResource BindingProxy}}">

                                                <neq:NeqMenuItem.IconSource>
                                                    <DrawingImage>
                                                        <DrawingImage.Drawing>
                                                            <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                                                                <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type neq:NeqMenuItem}}, Path=Foreground}" Geometry="F1 M24,24z M0,0z M19,4L15.5,4 14.5,3 9.5,3 8.5,4 5,4 5,6 19,6 M6,19A2,2,0,0,0,8,21L16,21A2,2,0,0,0,18,19L18,7 6,7 6,19z" />
                                                            </DrawingGroup>
                                                        </DrawingImage.Drawing>
                                                    </DrawingImage>
                                                </neq:NeqMenuItem.IconSource>

                                            </neq:NeqMenuItem>

                                        </neq:NeqContextMenu>

                                    </Setter.Value>

                                </Setter>

                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundSecondary}"/>
                                <Setter Property="BorderThickness" Value="2"/>

                                <Setter Property="Template">

                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">

                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="0">

                                                <ContentPresenter/>

                                            </Border>

                                        </ControlTemplate>
                                    </Setter.Value>

                                </Setter>

                            </Style.Setters>

                            <Style.Triggers>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>

                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundHover}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundHover}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlBackgroundHover}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                                </Trigger>

                            </Style.Triggers>

                        </Style>

                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>

                        <DataTemplate>
                            <TextBlock Text="{Binding ThemeName}"
                                       Foreground="{DynamicResource ForegroundPrimary}"
                                       Margin="10"
                                       HorizontalAlignment="Left"/>
                        </DataTemplate>

                    </ListBox.ItemTemplate>


                </ListBox>





            </Grid>

            <Grid Grid.Column="2">


                <Border x:Name="borderNoSelected"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Padding="10 8"
                        CornerRadius="{DynamicResource CornerRadius}"
                        Background="{DynamicResource BackgroundSecondary}">

                    <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                               Text="Select a theme to edit"/>

                </Border>

                <Grid x:Name="stackThemeInfo" 
                          Margin="10 0">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>

                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Vertical"
                                Margin="0 10">

                        <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                                   Text="Theme resources"
                                   Margin="0 0 0 0"/>

                        <neq:NeqTextBox x:Name="textBoxResourcesSearch"
                                        Style="{StaticResource NeqTextBox}"
                                        Grid.Row="0"
                                        HintText="Search"
                                        Margin="0 6 0 0"
                                        Text="{Binding ThemeResourcesSearch, UpdateSourceTrigger=PropertyChanged}"/>

                    </StackPanel>





                    <ListBox x:Name="listResources"
                             Background="{DynamicResource BackgroundSecondary}"
                             BorderThickness="0"
                             Grid.Row="1"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Stretch"
                             ItemsSource="{Binding ThemeResourcesCollectionView}">

                        <ListBox.Resources>

                            <converters:CornerRadiusToDoubleConverter x:Key="CornerRadiusToDouble"/>
                            <converters:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColor"/>
                            <converters:BoolInverterConverter x:Key="BoolInverterConverter"/>


                            <DataTemplate x:Key="ForDefault">

                                <Grid Height="60">

                                    <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                                               Text="{Binding ResourceName}"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>

                                    <TextBlock Foreground="{DynamicResource ForegroundDisabled}"
                                               Text="this item is not editable"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Right"/>

                                </Grid>

                            </DataTemplate>

                            <DataTemplate x:Key="ForSolidColor" 
                                          DataType="{x:Type themes:ThemeResourceModel}">

                                <Grid Height="60">
                                    <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                                               Text="{Binding ResourceName}"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>

                                    <neq:NeqToggleButton Style="{StaticResource NeqToggleButton}"
                                                         Background="{Binding Resource}"
                                                         Width="50"
                                                         Height="50"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Right"
                                                         Margin="10 0"
                                                         x:Name="buttonPickColor"
                                                         IsHitTestVisible="{Binding ElementName=popupPickColor, Path=IsOpen, Mode=OneWay, Converter={StaticResource BoolInverterConverter}}"/>



                                    <Popup x:Name="popupPickColor"
                                           IsOpen="{Binding ElementName=buttonPickColor, Path=IsChecked}"
                                           StaysOpen="False"
                                           Placement="Right"
                                           AllowsTransparency="True"
                                           PopupAnimation="Fade"
                                           PlacementTarget="{Binding ElementName=buttonPickColor}">

                                        <Border CornerRadius="{DynamicResource CornerRadius}"
                                                Background="{DynamicResource BackgroundPrimary}"
                                                BorderBrush="{DynamicResource BackgroundStroke}"
                                                BorderThickness="2"
                                                Padding="10">

                                            <extended:NeqHSLColorPicker Width="800"
                                                                        SelectedColor="{Binding Resource, Converter={StaticResource SolidColorBrushToColor}, Mode=TwoWay}"/>

                                        </Border>

                                    </Popup>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="ForCornerRadius" 
                                          DataType="{x:Type themes:ThemeResourceModel}">

                                <Grid Height="60">

                                    <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                                               Text="{Binding ResourceName}"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>

                                    <neq:NeqSlider Width="200"
                                                   Maximum="50"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Right"
                                                   Margin="10 0"
                                                   TickFrequency="1"
                                                   IsSnapToTickEnabled="True"
                                                   TickPlacement="TopLeft"
                                                   Style="{StaticResource NeqAccentSlider}"
                                                   Minimum="0"
                                                   Value="{Binding Resource, Converter={StaticResource CornerRadiusToDouble}, Mode=TwoWay}"/>

                                </Grid>

                            </DataTemplate>

                            <DataTemplate x:Key="ForDouble" 
                                          DataType="{x:Type themes:ThemeResourceModel}">

                                <Grid Height="60">

                                    <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                                               Text="{Binding ResourceName}"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>

                                    <neq:NeqSlider Width="200"
                                                   Maximum="50"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Right"
                                                   Margin="10 0"
                                                   TickFrequency="1"
                                                   IsSnapToTickEnabled="True"
                                                   TickPlacement="TopLeft"
                                                   Style="{StaticResource NeqAccentSlider}"
                                                   Minimum="0"
                                                   Value="{Binding Resource, Mode=TwoWay}"/>

                                </Grid>

                            </DataTemplate>

                            <DataTemplate x:Key="ForString"
                                          DataType="{x:Type themes:ThemeResourceModel}">

                                <Grid Height="60">

                                    <TextBlock Foreground="{DynamicResource ForegroundPrimary}"
                                               Text="{Binding ResourceName}"
                                               Margin="10 0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>

                                    <neq:NeqTextBox Text="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Style="{StaticResource NeqTextBox}"
                                                    Margin="10 0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Right"/>

                                </Grid>

                            </DataTemplate>

                        </ListBox.Resources>

                        <ListBox.ItemContainerStyle>

                            <Style TargetType="{x:Type ListBoxItem}">

                                <Style.Setters>

                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}"/>
                                    <Setter Property="BorderThickness" Value="0"/>

                                    <Setter Property="Template">

                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">

                                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="0">

                                                    <ContentPresenter/>

                                                </Border>

                                            </ControlTemplate>
                                        </Setter.Value>

                                    </Setter>

                                </Style.Setters>

                            </Style>

                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplateSelector>
                            <local:ThemeResourceTemplateSelector Default="{StaticResource ForDefault}"
                                                                 ForSolidColorBrush="{StaticResource ForSolidColor}"
                                                                 ForCornerRadius="{StaticResource ForCornerRadius}"
                                                                 ForString="{StaticResource ForString}"
                                                                 ForDouble="{StaticResource ForDouble}"/>
                        </ListBox.ItemTemplateSelector>

                    </ListBox>


                </Grid>



            </Grid>

        </Grid>

    </Grid>


</Window>
